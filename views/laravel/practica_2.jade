extends ../layout/contenido_editor
block contenido
	br
	div.row(style="margin-bottom:10%;")
		div.col-1
			form(action='/')
				input.btn.botones_editor.bot(type='submit' title='Inicio' value='' style='background:url("/img/icon-index2.png") left center no-repeat; padding:22px;')
		div.col-10
			h1 PRACTICA 2 - Plantillas Blade.
			ol
				li En el CMD, nos posicionamos en el directorio sobre el cual crearemos el proyecto Laravel. (>cd + directorio).
				li Crear proyecto Laravel con los comandos de Composer.
					br
					p.parrafo-centrado
						i > composer create-project laravel/laravel practica_2 --prefer-dist
					br
				li Nos posicionamos sobre el directorio en el que se creó el proyecto (>cd + directorio).
				li Revisamos que los archivos y carpetas que genera Composer las haya creado correctamente.
					img(src="/img/186.png" width=800)
					br
				li Modificamos la ruta / del archivo web.php, y en la función asignamos el código que se ejecutará cuando el usuario entre a esta ruta, la cual retorna una vista con un arreglo como parámetro.
					center
						img(src="/img/193.png" width=500)
					table.table.table-striped.table-hover
						tr
							th Linea(s)
							th Descripcion
						tr
							td 1 → *
							td Inicio y cierre del script en PHP.
						tr
							td 2 → 5
							td Definicion de la ruta / por el método GET.
						tr
							td 3
							td Creacion de un arreglo nombrado $lista_dias, le asignamos 5 valores.
						tr
							td 4
							td Respuesta del servidor. Retornamos la vista index.blade.php, a la cual le mandamos como parámetro un arreglo con 5 elementos.
						tr
							td 6
							td Creamos un archivo de vista en el directorio resources/views nombrado index.blade.php.
						tr
							td 7
							td Agregamos el siguiente código (HTML + PHP).
					center
						img(src="/img/194.png" width=700)
					table.table.table-striped.table-hover
						tr
							th Linea(s)
							th Descripcion
						tr
							td 1
							td Declaración del DOCTYPE, indica el tipo de documento que interpretará el navegador, en este caso es un documento HTML.
						tr
							td 2 → 31
							td Inicio y cierre del documento HTML.
						tr
							td 3 → 8
							td Declaración del head, cabecera del documento HTML.
						tr
							td 5 → 7
							td Hoja de estilos importada con el elemento link, indicando el recurso web del archivo CSS.
						tr
							td 9 → 30
							td Inicio y cierre del body (cuerpo) del documento HTML.
						tr
							td 10 → 29
							td Definicion de un contenedor tipo < div > con clase row, para que los contenedores que se encuentren dentro de este se alineen.
						tr
							td 11, 12→27, 28
							td Definicion de contenedores tipo < div > con clase col-4, para que cada contenedor abarque 4 espacios de los 12 que tiene el sistema de grid de Bootstrap 4.
						tr
							td 13 → 26
							td Bloque if-else de Blade, compara que la lista que se envió desde la ruta / no tenga ningún elemento. Si la lista tiene 0 elementos (ningún elemento), imprime una etiqueta de encabezado tipo < h2 > con el mensaje “No existen elementos en la lista”, sino; si la lista tiene 1 o más se imprime una tabla con los valores de los elementos de la lista.
						tr
							td 14, 17
							td Comentario.
						tr
							td 15
							td Definicion de un encabezado tipo < h2 > con el mensaje “No existen elementos en la lista”.
						tr
							td 16
							td Bloque else, se ejecuta si el condiciónal if es falso.
						tr
							td 18 → 25
							td Definición de una tabla con la clase de Bootstrap “table”.
						tr
							td 19
							td Definición de una cabecera < th > para la tabla.
						tr
							td 20 → 24
							td Definicion de un bucle tipo for, recorre la lista que se le envió desde la ruta /persona.
						tr
							td 22 → 23
							td Definicion de filas < tr > para cada elemento de la lista.
						tr
							td 22 
							td 
								p Definicion de una celda < td >. 
								p Contiene una expresión {{}}, la cual es un script PHP, al < td > se le asigna el valor de la variable $list que va iterando el bucle for.	
				li Corremos el servidor haciendo uso de artisan. (El servidor corre por el puerto 8000 en nuestro localhost)
					p.parrafo-centrado
						i > php artisan serve
					br
				li Abrimos el navegador en la ruta que definimos en nuestro archivo de rutas (/) para ver la vista con la que nos responde la ruta.
					br
					center
						img(src="/img/196.png" width=700)